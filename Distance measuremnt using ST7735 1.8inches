#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>

#define TFT_CS    10
#define TFT_RST   9
#define TFT_DC    8

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

int trigPin = 6;
int echoPin = 5;
long duration;
float distance_cm, distance_inches;

const int logoWidth = 128;
const int logoHeight = 160;
// Replace this dummy array with your actual bitmap array
const unsigned char myLogoBitmap[] PROGMEM = {
 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0xff, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3e, 0x03, 0xfc, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 
  0xfc, 0x03, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x87, 0x00, 0x00, 0x0e, 0x1e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x38, 0x03, 0x28, 0x01, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 
  0xc0, 0xc9, 0x30, 0x00, 0x63, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x73, 0x04, 0x89, 0x10, 0x00, 0x08, 
  0xe0, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x0a, 0x69, 0x10, 0x01, 0xc6, 0x38, 0x00, 0x00, 0x00, 0x03, 
  0x98, 0xce, 0x20, 0x00, 0x02, 0x21, 0x1c, 0x00, 0x00, 0x00, 0x07, 0x30, 0xa1, 0x03, 0xfc, 0x02, 
  0x08, 0xce, 0x00, 0x00, 0x00, 0x0e, 0x42, 0x44, 0x7f, 0xff, 0xe1, 0x50, 0x27, 0x00, 0x00, 0x00, 
  0x1c, 0x89, 0x73, 0xe0, 0x00, 0xfc, 0x18, 0x13, 0x80, 0x00, 0x00, 0x39, 0x05, 0x0f, 0x00, 0x00, 
  0x0f, 0x20, 0x09, 0xc0, 0x00, 0x00, 0x72, 0x13, 0x3c, 0x00, 0x00, 0x03, 0xc0, 0x04, 0xe0, 0x00, 
  0x00, 0x64, 0x48, 0x70, 0x00, 0x00, 0x00, 0xe0, 0x02, 0x60, 0x00, 0x00, 0xc8, 0x25, 0xc0, 0x00, 
  0x40, 0x00, 0x30, 0x01, 0x30, 0x00, 0x01, 0xd1, 0xf3, 0x80, 0x00, 0x40, 0x00, 0x1c, 0x00, 0xb8, 
  0x00, 0x01, 0xb0, 0x87, 0x00, 0x00, 0x40, 0x00, 0x0e, 0x00, 0x9c, 0x00, 0x03, 0x24, 0x4c, 0x00, 
  0x00, 0x60, 0x00, 0x07, 0x02, 0x4c, 0x00, 0x07, 0x43, 0x1c, 0x00, 0x00, 0xe0, 0x00, 0x03, 0x85, 
  0x2e, 0x00, 0x06, 0xc0, 0xb8, 0x00, 0x00, 0xe0, 0x00, 0x01, 0xd8, 0x26, 0x00, 0x0e, 0x8c, 0x30, 
  0x00, 0x00, 0xb0, 0x00, 0x00, 0xc1, 0x97, 0x00, 0x0d, 0x83, 0x60, 0x00, 0x01, 0xb0, 0x00, 0x00, 
  0x66, 0x13, 0x00, 0x0d, 0x00, 0xc0, 0x00, 0x01, 0x10, 0x00, 0x00, 0x75, 0x0b, 0x80, 0x19, 0x00, 
  0xc0, 0x00, 0x03, 0x18, 0x00, 0x00, 0x34, 0x09, 0x80, 0x1a, 0x01, 0x80, 0x00, 0x03, 0x08, 0x00, 
  0x00, 0x19, 0xe1, 0x80, 0x1a, 0x01, 0x80, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x1a, 0x25, 0xc0, 0x32, 
  0x03, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x18, 0x04, 0xc0, 0x34, 0x03, 0x00, 0x00, 0x0c, 0x43, 
  0x00, 0x00, 0x0c, 0x10, 0xc0, 0x34, 0x03, 0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x0d, 0xc2, 0xc0, 
  0x34, 0x06, 0x00, 0x00, 0x30, 0x01, 0xc0, 0x00, 0x0c, 0x02, 0xe0, 0x64, 0x06, 0x00, 0x00, 0xe0, 
  0x00, 0xe0, 0x00, 0x06, 0xf2, 0x60, 0x6c, 0xd6, 0x00, 0x01, 0xc0, 0x00, 0x30, 0x00, 0x06, 0x02, 
  0x60, 0x68, 0x16, 0x00, 0x07, 0x00, 0x00, 0x1e, 0x00, 0x06, 0x70, 0x60, 0x68, 0x06, 0x00, 0x1e, 
  0x00, 0xa0, 0x07, 0x00, 0x06, 0x10, 0x60, 0x68, 0xe6, 0x00, 0xf0, 0x00, 0x00, 0x01, 0xe0, 0x06, 
  0x61, 0x60, 0x69, 0xa6, 0x0f, 0x80, 0x40, 0x08, 0x20, 0x3e, 0x06, 0xf9, 0x60, 0x68, 0x66, 0x0f, 
  0xc0, 0x00, 0x00, 0x00, 0x3f, 0x06, 0x01, 0x60, 0x68, 0x06, 0x00, 0x78, 0x00, 0x00, 0x01, 0xe0, 
  0x06, 0x71, 0x60, 0x68, 0xb6, 0x00, 0x0e, 0x00, 0xa0, 0x07, 0x00, 0x06, 0x88, 0x60, 0x69, 0x46, 
  0x00, 0x03, 0x80, 0x00, 0x1c, 0x00, 0x06, 0x88, 0x60, 0x6c, 0xf6, 0x00, 0x00, 0xc0, 0x00, 0x30, 
  0x00, 0x06, 0x72, 0x60, 0x64, 0x06, 0x00, 0x00, 0x60, 0x00, 0xe0, 0x00, 0x0e, 0x02, 0x60, 0x64, 
  0x0f, 0x00, 0x00, 0x30, 0x01, 0xc0, 0x00, 0x0c, 0xe2, 0x60, 0x34, 0xab, 0x00, 0x00, 0x18, 0x03, 
  0x00, 0x00, 0x0d, 0x02, 0xe0, 0x34, 0x63, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x0c, 0x02, 0xc0, 
  0x36, 0x1b, 0x80, 0x00, 0x06, 0x06, 0x00, 0x00, 0x19, 0xc4, 0xc0, 0x32, 0x25, 0x80, 0x00, 0x06, 
  0x0c, 0x00, 0x00, 0x1a, 0x24, 0xc0, 0x1a, 0x05, 0xc0, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x3a, 0x25, 
  0xc0, 0x1b, 0x38, 0xc0, 0x00, 0x03, 0x18, 0x00, 0x00, 0x31, 0xc9, 0x80, 0x19, 0x00, 0xe0, 0x00, 
  0x01, 0x90, 0x00, 0x00, 0x76, 0x0b, 0x80, 0x0d, 0x05, 0x60, 0x00, 0x01, 0xb0, 0x00, 0x00, 0xe9, 
  0x03, 0x80, 0x0c, 0x96, 0x30, 0x00, 0x00, 0xb0, 0x00, 0x01, 0xc8, 0x93, 0x00, 0x0e, 0x88, 0x38, 
  0x00, 0x00, 0xe0, 0x00, 0x01, 0x85, 0x27, 0x40, 0x06, 0x41, 0x5c, 0x00, 0x00, 0xe0, 0x00, 0x03, 
  0xa0, 0x26, 0x00, 0x07, 0x65, 0x8e, 0x00, 0x00, 0x60, 0x00, 0x07, 0x1c, 0x4e, 0x00, 0x13, 0xa2, 
  0x07, 0x00, 0x00, 0x40, 0x00, 0x1e, 0x00, 0x5c, 0x00, 0x01, 0x90, 0x03, 0xc0, 0x00, 0x40, 0x00, 
  0x3c, 0x08, 0x9d, 0x00, 0x09, 0xd8, 0x01, 0xe0, 0x00, 0x40, 0x00, 0x70, 0x01, 0x39, 0x00, 0x08, 
  0xec, 0x00, 0x78, 0x00, 0x00, 0x01, 0xe0, 0x02, 0x72, 0x00, 0x04, 0x76, 0x00, 0x3e, 0x00, 0x00, 
  0x07, 0xc0, 0x06, 0xf2, 0x00, 0x06, 0x73, 0x00, 0x0f, 0xc0, 0x00, 0x3f, 0x00, 0x0c, 0xe6, 0x00, 
  0x06, 0x39, 0x80, 0x03, 0xfe, 0x07, 0xfc, 0x00, 0x19, 0xcc, 0x00, 0x03, 0x1c, 0xc0, 0x00, 0x7f, 
  0xff, 0xe0, 0x00, 0x33, 0x9c, 0x00, 0x03, 0x8f, 0x60, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x4f, 0x3c, 
  0x00, 0x01, 0xc7, 0x90, 0x00, 0x20, 0x00, 0xb0, 0x01, 0x9e, 0x78, 0x00, 0x01, 0xe3, 0xcc, 0x00, 
  0x66, 0x6e, 0xa8, 0x03, 0x3c, 0xf8, 0x00, 0x00, 0xf9, 0xe3, 0x00, 0x49, 0x69, 0x3c, 0x0c, 0x79, 
  0xf0, 0x00, 0x00, 0xfc, 0x79, 0xc0, 0x51, 0x58, 0xa0, 0x31, 0xf3, 0xe0, 0x00, 0x00, 0x7c, 0x3e, 
  0x70, 0x15, 0x5a, 0x00, 0xc7, 0xc3, 0xc0, 0x00, 0x00, 0x1d, 0x0f, 0x8e, 0x00, 0x00, 0x07, 0x1f, 
  0x8b, 0x80, 0x00, 0x00, 0x02, 0x07, 0xe3, 0xe0, 0x00, 0x78, 0x7e, 0x14, 0x00, 0x00, 0x00, 0x02, 
  0xc1, 0xfc, 0x1f, 0xff, 0x83, 0xf8, 0x28, 0x00, 0x00, 0x00, 0x01, 0x48, 0x7f, 0xc0, 0x00, 0x3f, 
  0xe0, 0x50, 0x00, 0x00, 0x00, 0x00, 0x48, 0x0f, 0xff, 0xff, 0xff, 0x02, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x16, 0x01, 0xff, 0xff, 0xf8, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x90, 0x07, 0xff, 
  0x00, 0x3a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x37, 0x88, 0x10, 0x33, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x49, 
  0x93, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x49, 0x92, 0x60, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x90, 0x20, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  tft.initR(INITR_BLACKTAB);
  tft.setRotation(1);

  Serial.begin(9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Display measuring device logo
  tft.fillScreen(ST7735_BLACK);
  tft.drawBitmap(0, 0, myLogoBitmap, logoWidth, logoHeight, ST7735_BLACK); // Adjust x, y, width, height, and color
  delay(2000);

  // Display welcome page
  tft.fillScreen(ST7735_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST7735_WHITE);
  tft.setCursor(0, 0);
  tft.println("Measurement  and          Instrumentation");
  delay(5000);

  tft.fillScreen(ST7735_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST7735_WHITE);
  tft.setCursor(0, 0);
  tft.println("LECTURER:    Dr Talhah");
  tft.setCursor(40, 50);
  tft.println("COURSE:     MCE313");
  
  delay(3000);
}

void loop() {
  tft.setTextSize(1);
  tft.setTextColor(ST7735_WHITE);
  tft.setCursor(0, 10);
  tft.print("Distance");
  
  digitalWrite(trigPin, LOW);
  delayMicroseconds(5);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  pinMode(echoPin, INPUT);
  duration = pulseIn(echoPin, HIGH);

  distance_cm = duration * 0.0343 / 2.0;
  distance_inches = duration * 0.0135 / 2.0;

  Serial.print(distance_cm, 2);
  Serial.print(" cm, ");
  Serial.print(distance_inches, 2);
  Serial.print(" inches");

  delay(250);

  tft.fillScreen(ST7735_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST7735_RED);
  tft.setCursor(10, 30);
  tft.print(distance_cm, 1);
  tft.print(" cm");

  tft.setCursor(10, 70);
  tft.print(distance_inches, 1);
  tft.print(" inches");

  delay(250);
}
